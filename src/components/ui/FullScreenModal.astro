---
interface Props {
  buttonText?: string;
  modalTitle?: string;
  class?: string;
}

const { buttonText = "Open Modal", modalTitle = "Modal", class: className = "" } = Astro.props;
---

<div class={`fb-fullscreen__container ${className}`}>
  <button class="fb-fullscreen__trigger" data-modal="fullscreen-modal">
    {buttonText}
  </button>

  <div class="fb-fullscreen__overlay" id="fullscreen-modal">
    <div class="fb-fullscreen__content">
      <div class="fb-fullscreen__header">
        <h2 class="fb-fullscreen__title">{modalTitle}</h2>
        <button class="fb-fullscreen__close" data-close="fullscreen-modal">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>
      <div class="fb-fullscreen__body">
        <slot />
      </div>
    </div>
  </div>
</div>

<style>
  .fb-fullscreen__trigger {
    padding: 0.5rem 1rem;
    background: #0066cc;
    color: white;
    border: none;
    border-radius: 0.25rem;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.2s ease;
  }

  .fb-fullscreen__trigger:hover {
    background: #0052a3;
  }

  .fb-fullscreen__overlay {
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100vw !important;
    height: 100vh !important;
    background: rgba(0, 0, 0, 0.95) !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    z-index: 2147483647 !important;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    isolation: isolate;
  }

  .fb-fullscreen__overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .fb-fullscreen__content {
    background: white;
    width: 100vw;
    height: 100vh;
    border-radius: 0;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    transform: scale(0.9);
    transition: transform 0.3s ease;
  }

  .fb-fullscreen__overlay.active .fb-fullscreen__content {
    transform: scale(1);
  }

  .fb-fullscreen__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    border-bottom: 1px solid #e5e5e5;
    background: #f8f9fa;
  }

  .fb-fullscreen__title {
    margin: 0;
    font-size: 1.5rem;
    font-weight: 600;
  }

  .fb-fullscreen__close {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 0.25rem;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #666;
    transition: color 0.2s ease, background-color 0.2s ease;
  }

  .fb-fullscreen__close:hover {
    background: #e5e5e5;
    color: #333;
  }

  .fb-fullscreen__body {
    flex: 1;
    padding: 1rem;
    overflow-y: auto;
  }

  @media (max-width: 768px) {
    .fb-fullscreen__content {
      width: 100vw;
      height: 100vh;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Move all modals to body to escape stacking context issues
    const modals = document.querySelectorAll('.fb-fullscreen__overlay');
    modals.forEach(modal => {
      if (modal.parentElement !== document.body) {
        document.body.appendChild(modal);
      }
    });

    const triggers = document.querySelectorAll('[data-modal]');
    const closes = document.querySelectorAll('[data-close]');

    triggers.forEach(trigger => {
      trigger.addEventListener('click', function(this: HTMLElement) {
        const modalId = this.getAttribute('data-modal');
        if (modalId) {
          const modal = document.getElementById(modalId);
          if (modal) {
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
          }
        }
      });
    });

    closes.forEach(close => {
      close.addEventListener('click', function(this: HTMLElement) {
        const modalId = this.getAttribute('data-close');
        if (modalId) {
          const modal = document.getElementById(modalId);
          if (modal) {
            modal.classList.remove('active');
            document.body.style.overflow = '';
          }
        }
      });
    });

    document.addEventListener('click', function(e: MouseEvent) {
      const target = e.target as HTMLElement;
      if (target && target.classList && target.classList.contains('fb-fullscreen__overlay')) {
        target.classList.remove('active');
        document.body.style.overflow = '';
      }
    });

    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        const activeModal = document.querySelector('.fb-fullscreen__overlay.active');
        if (activeModal) {
          activeModal.classList.remove('active');
          document.body.style.overflow = '';
        }
      }
    });
  });
</script>
